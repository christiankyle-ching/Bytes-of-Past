SOURCE						
https://www.computerhistory.org/timeline/software-languages/						
ID	Status	Date	Name	Inventor	Description	Image Link
SC01		1945	Plankalkül (Plan Calculus)	Konrad Zuse	The first algorithmic programming language, with the goal of creating the theoretical preconditions for the solution of general problems. Seven years earlier, Zuse had developed and built the world´s first binary digital computer, the Z1. He completed the first fully functional program-controlled electromechanical digital computer, the Z3, in 1941. Only the Z4 — the most sophisticated of his creations — survived World War II.	https://images.computerhistory.org/timeline/timeline_sw.languages_1945.zuse.jpg
SC02		1948	The Mathematical Theory of Communication	Claude Shannon	American mathematician Claude Shannon writes The Mathematical Theory of Communication, laying the groundwork for understanding the theoretical limits of communication between people and machines. As part of this work Shannon identified the bit as a fundamental unit of information and, coincidentally, the basic unit of computation.	https://images.computerhistory.org/timeline/timeline_sw.languages_1948.shannon.jpg
SC03		1952	Grace Hopper completes A-0	Grace Hopper	Mathematician Grace Hopper completes A-0, a program that allows a computer user to use English-like words instead of numbers to give the computer instructions. It possessed several features of a modern-day compiler and was written for the UNIVAC I computer, the first commercial business computer system in the United States.	https://images.computerhistory.org/timeline/timeline_sw.languages_1952.hopper.jpg
SC04		1953	Speedcode	John Backus	John Backus completes Speedcode for IBM´s first large-scale scientific computer, the IBM 701. Although using Speedcode demanded a significant amount of scarce memory, it greatly reduced the time required to write a program. In 1957, Backus became project leader of the IBM FORTRAN project, which became the most popular scientific programming language in history and is still in use today.	https://images.computerhistory.org/timeline/timeline_sw.languages_1953.speed.jpg
SC05		1957	FORTRAN	John Backus	An IBM team led by John Backus develops FORTRAN, a powerful scientific computing language that uses English-like statements. Some programmers were skeptical that FORTRAN could be as efficient as hand coding, but that sentiment disappeared when FORTRAN proved it could generate efficient code. Over the ensuing decades, FORTRAN became the most often used language for scientific and technical computing. FORTRAN is still in use today.	https://images.computerhistory.org/timeline/timeline_sw.languages_1957.fortran.jpg
SC06		1960	COBOL (Common Business-Oriented Language)	Pentagon	A team drawn from several computer manufacturers and the Pentagon develop COBOL—an acronym for Common Business-Oriented Language. Many of its specifications borrow heavily from the earlier FLOW-MATIC language. Designed for business use, early COBOL efforts aimed for easy readability of computer programs and as much machine independence as possible.	https://images.computerhistory.org/timeline/timeline_sw.languages_1960.cobol.jpg
SC07		1961	Compatible Time-Sharing System (CTSS)	Fernando Corbató	Timesharing systems can support many users – sometimes hundreds – by sharing the computer with each user. CTSS was developed by the MIT Computation Center under the direction of Fernando Corbató and was based on a modified IBM 7090, then later 7094, mainframe computer. Programs created for CTSS included RUNOFF, an early text formatting utility, and an early inter-user messaging system that presaged email. CTSS operated until 1973.	https://images.computerhistory.org/timeline/timeline_sw.languages_1961.ctss.jpg
SC08		1962	 A Programming Language	Kenneth Iverson	Kenneth Iverson’s book A Programming Language details a form of mathematical notation that he had developed in the late 1950s while an assistant professor at Harvard University. IBM hired Iverson and it was there that APL evolved into a practical programming language. APL was widely used in scientific, financial, and especially actuarial applications. Powerful functions and operators in APL are expressed with special characters, resulting in very concise programs.	https://images.computerhistory.org/timeline/timeline_sw.languages_1962.apl.jpg
SC09		1963	ASCII		ASCII — American Standard Code for Information Interchange — permits machines from different manufacturers to exchange data. The ASCII code consisted of 128 unique strings of ones and zeros. Each sequence represented a letter of the English alphabet, an Arabic numeral, an assortment of punctuation marks and symbols, or a function such as a carriage return. ASCII can only represent up to 256 symbols, and for this reason many other languages are better supported by Unicode, which has the ability to represent over 100,000 symbols.	https://images.computerhistory.org/timeline/timeline_sw.languages_1963.ascii.jpg
SC10		1964	BASIC (Beginner’s All-purpose Symbolic Instruction Code)	Thomas Kurtz and John Kemeny	An easy-to-learn programming language, for their students at Dartmouth College who had no prior programming experience. Its use spread widely to schools all over the world. Over a decade later, most early personal computers were shipped with a version of BASIC embedded in their system, which opened up programming to an entirely new audience.	https://images.computerhistory.org/timeline/timeline_sw.languages_1964.basic.jpg
SC11		1965	Simula	Kristen Nygaard and Ole-Johan Dahl	Simula, an object-oriented language, is written by Kristen Nygaard and Ole-Johan Dahl at the Norwegian Computing Center. Based largely on the Algol 60 programming language, Simula grouped data and instructions into blocks called objects, each representing one facet of a system intended for simulation. In addition to simulation, Simula also has applications in computer graphics, process control, scientific data processing and other fields.	https://images.computerhistory.org/timeline/timeline_sw.languages_1965.simula.jpg
SC12		1967	Seymour Papert designs LOGO	Seymour Papert	Seymour Papert designs LOGO as a computer language for children. Initially a drawing program, LOGO controlled the actions of a mechanical "turtle," which traced its path with pen on paper. Electronic turtles made their designs on a video display monitor.	https://images.computerhistory.org/timeline/timeline_sw.languages_1967.logo.jpg
SC13		1968	CICS (Customer Information Control System)	IBM	An IBM transaction processing system, is released. Before CICS was introduced, many industries used punched card batch processing for high-volume customer transactions. As it allowed online transaction processing, CICS was able to replace this method and greatly sped up the way that companies interacted with their customers.	https://images.computerhistory.org/timeline/timeline_sw.languages_1968.cics.jpg
SC14		1969	UNIX	Kenneth Thompson and Dennis Ritchie	AT&T Bell Labs programmers Kenneth Thompson and Dennis Ritchie develop the UNIX operating system on a spare DEC minicomputer. UNIX combined many of the timesharing and file management features offered by Multics, from which it took its name. (Multics, a project of the mid-1960s, represented one of the earliest efforts at creating a multi-user, multi-tasking operating system.) The UNIX operating system quickly secured a wide following, particularly among engineers and scientists, and today is the basis of much of our world’s computing infrastructure.	https://images.computerhistory.org/timeline/timeline_sw.languages_1969.unix.jpg
SC15		1970	The Pascal programming	Professor Niklaus Wirth	The Pascal programming language, named after Blaise Pascal, a French physicist, mathematician and inventor turned philosopher, is introduced by Professor Niklaus Wirth. His aim with Pascal was to develop a programming language applicable to both commercial and scientific applications, and which could also be used to teach programming techniques to college students. It was closely based on ALGOL 60, which Wirth had also helped to develop.	https://images.computerhistory.org/timeline/timeline_sw.languages_1970.wirth.jpg
SC16		1972	C programming language	Dennis Ritchie	The C programming language is released. Dennis Ritchie and his team created C based on the earlier language BCPL (Basic Combined Programming Language) and soon after re-wrote the source code for Unix in C. As such, Unix was easily ported to other computers and spread swiftly. C is still widely used today.	https://images.computerhistory.org/timeline/timeline_sw.languages_1972.c.jpg
SC17		1976	CP/M is developed	Gary Kildall	Gary Kildall develops the first commercially successful operating system for microcomputers, CP/M. He and his wife established Intergalactic Digital Research (modestly dropping “Intergalactic” later) to market it. CP/M made it possible for one version of a program to run on a variety of computers built around eight-bit microprocessors. At one point Digital Research and Microsoft were approached by IBM about providing an operating system for its PC. Microsoft won the competition with its own operating system, called MS-DOS.	https://images.computerhistory.org/timeline/timeline_sw.languages_1976.cpm.jpg
SC18		1978	WordStar	Rob Barnaby	Among the first popular word processing systems for personal computers, WordStar originally ran on the CP/M operating system, and later on DOS and Windows. In 1981, it had significant market share, in part because it came bundled with the Osborne 1 computer. WordStar retained a loyal following well after Microsoft Word surpassed it in sales.	https://images.computerhistory.org/timeline/timeline_sw.languages_1978.wordstar.jpg
SC19		1979	VisiCalc	Dan Bricklin and Bob Frankston	The program that turned the personal computer into a business machine. Initially developed for the Apple II, whose sales it boosted, VisiCalc automated the recalculation of spreadsheets, allowing users to ask “What if?” questions of their financial information.	https://images.computerhistory.org/timeline/timeline_sw.languages_1979.visicalc.jpg
SC20		1981	MS-DOS released with the IBM PC	Bill Gates and Paul Allen	MS-DOS, or Microsoft Disk Operating System, the basic software for the newly released IBM PC, is the start of a long partnership between IBM and Microsoft, which Bill Gates and Paul Allen had founded only six years earlier. IBM’s PC inspired hardware imitators in the 1980s, but for software, most licensed MS-DOS. MS-DOS was eventually supplanted by Microsoft’s Windows operating system.	https://images.computerhistory.org/timeline/timeline_sw.languages_1981.msdos.jpg
SC21		1982	Lotus 1-2-3	Mitch Kapor	A software suite for the IBM PC based on a word processor, spreadsheet, and database.	https://www.computerhistory.org/timeline/1982/#169ebbe2ad45559efbc6eb357202c2f4
SC22		1983	Word	Microsoft	Originally called Multi-Tool Word	https://pixabay.com/vectors/microsoft-word-ms-word-ms-word-icon-5963679/
SC23		1984	Verilog	Phil Moorby & Prabhu Goel	A hardware description language that is used in the design of digital circuitry.	https://images.computerhistory.org/timeline/timeline_sw.languages_1984.verilog.jpg
SC24		1985	C++ programming language	Bjarne Stroustrup	Emerges as the dominant object-oriented language in the computer industry	https://images.computerhistory.org/timeline/timeline_sw.languages_1985.c++.jpg
SC25		1987	HyperCard	William Atkinson	A software tool that simplifies development of in-house applications.	https://images.computerhistory.org/timeline/timeline_sw.languages_1987.hypercard.jpg
SC26		1988	Mathematica	Stephen Wolfram	A complete ecosystem for computing that allowed symbolic entry of mathematical functions and equations as well as graphical display of the results.	https://images.computerhistory.org/timeline/timeline_sw.languages_1988.mathematica.jpg
SC27		1990	Photoshop	John and Thomas Knoll	An image editing program and the most popular software program published by Adobe Systems.	https://pixabay.com/illustrations/photoshop-logo-symbol-adobe-icon-1065296/
SC28		1991	Linux kernel	Linus Torvalds	It was first released to several Usenet newsgroups	https://commons.wikimedia.org/wiki/File:Tux.svg
SC29		1993	FreeBSD		Incorporated features including networking, storage, security, portability and Linux compatibility.	https://images.computerhistory.org/timeline/timeline_sw.languages_1993.freebsd1.jpg
SC30		1995	Java 1.0	Sun Microsystems	It was a successor to the Oak programming language created by James Gosling	https://www.computerhistory.org/timeline/1995/#169ebbe2ad45559efbc6eb357203b448
SC31		1995	Javascript	Brendan Eich	An object-based scripting language that used extensively across the Internet on both client and server sides.	https://images.computerhistory.org/timeline/timeline_sw.languages_1995.javascript.jpg
SC32		1995	Windows 95 operating system	Microsoft	A major improvement over the previous Windows 3.1, adding features such as “Plug and Play” for more easily installing new peripherals, as well as the Taskbar and Start button menu	https://www.computerhistory.org/timeline/1995/#a2eed4bb9308a22315003de9062221ec
SC33		1997	Visual Studio 	Microsoft	It consist of number of programming tools, as Microsoft’s intent was to create a single environment where developers could use different programming languages.	https://images.computerhistory.org/timeline/timeline_sw.languages_1997.visualstudio.jpg
SC34		2000	Y2K bug		Fuels news reports that the onset of the year 2000 will cripple telecommunications, the financial sector and other vital infrastructure.	https://images.computerhistory.org/timeline/timeline_sw.languages_2000.y2Kbug.jpg
SC35		2001	BitTorrent	Bram Cohen	A peer-to-peer file sharing service that enabled users to upload and download files, typically music and movies.	https://images.computerhistory.org/timeline/timeline_sw.languages_2001.bittorrent.jpg
SC36		2001	Mac OS X	Apple	Introduced a more stable and reliable platform and multiple applications could more efficiently be run at the same time.	https://www.computerhistory.org/timeline/software-languages/#169ebbe2ad45559efbc6eb35720895b9
SC37		2001	Windows XP	Microsoft	Was considered more stable than previous versions of the operating system. It also as widely adopted by industry and persisted much longer than Microsoft planned.	https://www.flickr.com/photos/johnbullas/2868734616/
SC38		2001	iTunes	Apple	Allowed users to record music from CDs, bring it into iTunes, mix it with other songs and then burn a custom CD.	https://iconscout.com/icon/itunes-28
SC39		2005	Hadoop	Google	An open source software project initially developed as a means of extracting search results from large amounts of unstructured data, such as data found on the web.	https://www.computerhistory.org/timeline/2005/#169ebbe2ad45559efbc6eb35720c6ce8
SC40		2010	Stuxnet Virus 		The virus attempted to damage uranium enrichment centrifuges used in Iran’s nuclear development program by causing damaging speed variations.	https://images.computerhistory.org/timeline/timeline_sw.languages_2010.stuxnet.jpg
SC41		2011	Adobe Creative Cloud	Adobe	This model allowed Adobe to begin releasing continuous updates to their products, shortening the development cycle and the time need to incorporate new features.	https://commons.wikimedia.org/wiki/File:Creative_Cloud.svg
SC42		2013	Updated Microsoft 365	Microsoft	Microsoft’s Word, Excel, OneNote, PowerPoint, Outlook, Access, and Publisher were all available in packages for a monthly or annual subscription. Also included with a subscription was 1 TB of cloud storage on Microsoft’s One Drive (formerly Skydrive). Home, personal, university, business, and enterprise subscription plans were made available for a wide range of users.	https://commons.m.wikimedia.org/wiki/File:Microsoft_Office_logo_(2013%E2%80%932019).png
SC43		2014	HTML 5	Web Hypertext Application Technology Working Group.	Announced as the successor to HTML 4, which had become the standard for web markup languages in 1997.	https://www.computerhistory.org/timeline/2014/#169ebbe2ad45559efbc6eb3572096e7a